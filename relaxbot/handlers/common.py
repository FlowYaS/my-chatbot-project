# handlers/common.py:
from aiogram import Router, types, F
from aiogram.filters.command import Command
from keyboards.keyboards import kb1, kb2
from handlers.random_fox import fox
from random import randint

router = Router()

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command("start"))
@router.message(F.text.lower() == '–Ω–∞–∑–∞–¥')
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {name}!", reply_markup=kb1)

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop
@router.message(Command("stop"))
@router.message(F.text.lower() == '—Å—Ç–æ–ø')
@router.message(F.text.lower() == '–∑–∞–∫—Ä—ã—Ç—å')
async def cmd_stop(message: types.Message):
    name = message.chat.first_name
    await message.answer(f"–ü–æ–∫–∞, {name}!")

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@router.message(Command("fox"))
@router.message(Command("–ª–∏—Å–∞"))
@router.message(F.text.lower() == '–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É')
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox= fox()
    await message.answer(f"–î–µ—Ä–∂–∏ –ª–∏—Å—É, {name}!")
    await message.answer_photo(photo=img_fox)

# –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Ç–µ–º, –∫—Ç–æ —É–∂–µ –æ–±—â–∞–ª—Å—è —Å –Ω–∞–º–∏ –≤ –±–æ—Ç–µ
#    await bot.send_photo(message.from_user.id, photo=img_fox)

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ"
@router.message(F.text.casefold() == "—Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ")
async def send_random(message: types.Message):
    number = randint(1, 10)
    await message.answer(f'{number}')

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
@router.message(F.text.lower())
async def cmd_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if "–ø—Ä–∏–≤–µ—Ç" in msg_user:
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {name}!")
    elif "–ø–æ–∫–∞" in msg_user:
        await message.answer(f"–î–æ –≤—Å—Ç—Ä–µ—á–∏, {name}!")
    elif "–¥–∞—Ä—Ç—Å" in msg_user:
        await message.answer_dice(emoji='üéØ')
    elif "–ø–æ–∏–≥—Ä–∞–µ–º" in msg_user:
        await message.answer(f"–í—ã–±–∏—Ä–∞–π –∏–≥—Ä—É, {name}", reply_markup=kb2)
    else:
        await message.answer(f"{name}, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–µ")

